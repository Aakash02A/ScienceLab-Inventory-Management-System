Summary
This project prompt outlines an advanced Science Laboratory Inventory Management System tailored for a DBMS course, emphasizing real-time IoT-enabled tracking of reagents and equipment to automate alerts and restocking workflows 
Infosys BPM
. It also prescribes a robust DBMS architecture utilizing a fully normalized schema, temporal tables for versioning, strategic indexing, and comprehensive audit trails to support complex analytics and regulatory compliance 
Vertabelo Data Modeler
.

Project Overview
Objective:
Design and implement a web-based inventory management system for scientific laboratories that centralizes data, enhances accuracy, and automates routine tasks.

Scope:

Entities: Chemicals, equipment, consumables, users, suppliers, orders, audit logs.

Users & Roles: Admin, Lab Manager, Researcher, Student (role‑based access control for feature visibility).

Deployment: Cloud-hosted with offline-capable client sync.

Advanced Features
1. Real‑Time IoT & RFID Integration
Embed IoT sensors or RFID tags on storage shelves and equipment to capture live location and usage data, reducing manual entry and errors 
ZhenHub
.
Automate low‑stock or expiration alerts via email/SMS based on sensor thresholds 
Infosys BPM
.

2. Barcode & QR Code Scanning
Implement mobile/WebQR scanning for rapid check‑in/check‑out of items and automated stock adjustments, minimizing data entry latency 
QuickBooks & Xero Inventory Tool
.

3. Predictive Restocking & Supplier Integration
Use historical usage trends to forecast reorder points and auto‑generate purchase orders to pre‑approved suppliers 
Scispot
.

4. Safety & Compliance Module
Link each chemical to its Safety Data Sheet (SDS) and hazard classification, tracking certifications and calibration schedules for equipment 
SciNote
.

5. Analytics & Reporting
Provide dashboards showing consumption trends, cost analysis, and compliance summaries with drill‑down capabilities 
Avantor Sciences
.

6. Versioning & Audit Trails
Maintain temporal tables to record historical changes in inventory levels and user actions, ensuring full traceability for audits 
Vertabelo Data Modeler
.

DBMS Architecture & Data Model
Schema Design
Normalized ER Diagram: At least 3NF with separate tables for items, categories, locations, and transactions 
SeaTable Forum
.

Master‑Detail Relationships: e.g., Chemical ➔ InventoryTransaction ➔ User.

Advanced DB Concepts
Temporal Tables: Capture row‑level history for updates/deletes.

Partitioning: Segment large tables (e.g., InventoryTransactions) by date for performance.

Indexing Strategies: Composite indexes on (item_id, location_id, timestamp) for rapid queries.

Stored Procedures & Triggers: Automate threshold checks and alert generation.

Functional Requirements
User Authentication & Authorization: Secure login with JWT/OAuth2 and RBAC.

Dashboard: Real-time overview of stock levels, expiries, and alerts.

Inventory Operations: Add/Edit/Delete items; check-in/check-out via scan or form.

Ordering Workflow: Generate and track purchase orders; vendor API integration.

Reporting: Exportable PDF/CSV usage reports and compliance logs.

Offline Sync: Local cache for mobile/Web clients with conflict resolution.

Deliverables
ER Diagram & Schema Scripts: SQL DDL for all tables, indexes, and constraints.

Backend API: RESTful endpoints for CRUD operations, media uploads (e.g., SDS PDFs).

Frontend Mockups: Responsive UI prototypes (React/Vue + Tailwind CSS).

Testing Plan: Unit and integration tests for critical DB transactions and business rules.

This prompt combines advanced IoT integration, rigorous DBMS design patterns, and actionable functional modules, ensuring a challenging yet achievable DBMS course project.